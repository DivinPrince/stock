generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userId    String
  products  Product[] @relation("StoreToProduct")
  sellerIds String[] 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Sell      Sell[]    @relation("StoreToSell")
  Expence   Expence[] @relation("ExpenceToStore")
}

model Product {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId       String
  store         Store    @relation("StoreToProduct", fields: [storeId], references: [id])
  name          String
  price         Int
  purchaseCost  Int
  description   String
  stockQuantity Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([storeId])
}

model Sell {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String
  store     Store      @relation("StoreToSell", fields: [storeId], references: [id])
  sellItems SellItem[] // Relation to sellItem model
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([storeId])
}

// Intermediary for a many-to-many relationship
model SellItem {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  sellId String @db.ObjectId
  sell   Sell   @relation(fields: [sellId], references: [id])
  price  Int

  @@index([sellId])
}

model Expence {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  storeId String
  store   Store  @relation("ExpenceToStore", fields: [storeId], references: [id])
  description    String
  name  String
  money    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  @@index([storeId])
}
