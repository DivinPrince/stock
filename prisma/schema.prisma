generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userId    String
  products  Product[] @relation("StoreToProduct")
  sellers   Seller[]  @relation("StoreToSeller")
  sellerIds String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Sell      Sell[]    @relation("StoreToSell")
  Expence   Expence[] @relation("ExpenceToStore")
}

model Product {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId       String
  store         Store    @relation("StoreToProduct", fields: [storeId], references: [id])
  name          String
  price         Int
  sold          Int      @default(0)
  purchaseCost  Int
  description   String
  stockQuantity Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([storeId])
}

model Sell {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String
  store     Store      @relation("StoreToSell", fields: [storeId], references: [id])
  sellItems SellItem[] // Relation to sellItem model
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([storeId])
}

// Intermediary for a many-to-many relationship
model SellItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sellId    String   @db.ObjectId
  name      String
  descriptio String
  sellerName String
  customerName String
  customerNumber String
  Qty       Int
  sell      Sell     @relation(fields: [sellId], references: [id])
  price     Int
  profit    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([sellId])
}

model Expence {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String
  store       Store    @relation("ExpenceToStore", fields: [storeId], references: [id])
  description String
  name        String
  money       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([storeId])
}

model Seller {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  name      String
  storeId   String
  store     Store    @relation("StoreToSeller", fields: [storeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}
